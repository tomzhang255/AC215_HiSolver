[
    {
        "input": "# All other style arguments are ignored",
        "output": "super ( ) .set_style ( stroke_color=BLACK , stroke_width=0 , fill_color=BLACK , fill_opacity=fill_opacity , ) if len ( kwargs ) > 0 : logger.info ( `` Argument % s is ignored in BackgroundRectangle.set_style . `` , kwargs , ) return self def get_fill_color ( self ) : return self.color class Cross ( VGroup ) : `` '' '' Creates a cross . Parameters -- -- -- -- -- mobject The mobject linked to this instance . It fits the mobject when specified . Defaults to None . stroke_color Specifies the color of the cross lines . Defaults to RED . stroke_width Specifies the width of the cross lines . Defaults to 6. scale_factor Scales the cross to the provided units . Defaults to 1 . Examples -- -- -- -- .. manim : : ExampleCross : save_last_frame : class ExampleCross ( Scene ) : def construct ( self ) : cross = Cross ( ) self.add ( cross ) `` '' '' def __init__ ( self , mobject : Mobject | None = None , stroke_color : ParsableManimColor = RED , stroke_width : float = 6 , scale_factor : float = 1 , * * kwargs , ) : super ( ) .__init__ ( Line ( UP + LEFT , DOWN + RIGHT ) , Line ( UP + RIGHT , DOWN + LEFT ) , * * kwargs ) if mobject is not None : self.replace ( mobject , stretch=True ) self.scale ( scale_factor ) self.set_stroke ( color=stroke_color , width=stroke_width ) class Underline ( Line ) : `` '' '' Creates an underline . Examples -- -- -- -- .. manim : : UnderLine : save_last_frame : class UnderLine ( Scene ) : def construct ( self ) : man = Tex ( `` Manim '' )"
    },
    {
        "input": "# Full Word",
        "output": "ul = Underline ( man )"
    },
    {
        "input": "# Underlining the word",
        "output": "self.add ( man , ul ) `` '' '' def __init__ ( self , mobject , buff=SMALL_BUFF , * * kwargs ) : super ( ) .__init__ ( LEFT , RIGHT , buff=buff , * * kwargs ) self.match_width ( mobject ) self.next_to ( mobject , DOWN , buff=self.buff )"
    }
]