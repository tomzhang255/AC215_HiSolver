[
    {
        "input": "# Abbreviations for a common types",
        "output": "ManimColor = Union [ str , Color , None ] RangeSpecifier = Tuple [ float , float , float ] | Tuple [ float , float ] Span = tuple [ int , int ] SingleSelector = Union [ str , re.Pattern , tuple [ Union [ int , None ] , Union [ int , None ] ] , ] Selector = Union [ SingleSelector , Iterable [ SingleSelector ] ] UniformDict = Dict [ str , float | bool | np.ndarray | tuple ]"
    },
    {
        "input": "# in the future",
        "output": "FloatArray = np.ndarray [ int , np.dtype [ np.float64 ] ] Vect2 = Annotated [ FloatArray , Literal [ 2 ] ] Vect3 = Annotated [ FloatArray , Literal [ 3 ] ] Vect4 = Annotated [ FloatArray , Literal [ 4 ] ] VectN = Annotated [ FloatArray , Literal [ `` N '' ] ] Matrix3x3 = Annotated [ FloatArray , Literal [ 3 , 3 ] ] Vect2Array = Annotated [ FloatArray , Literal [ `` N '' , 2 ] ] Vect3Array = Annotated [ FloatArray , Literal [ `` N '' , 3 ] ] Vect4Array = Annotated [ FloatArray , Literal [ `` N '' , 4 ] ] VectNArray = Annotated [ FloatArray , Literal [ `` N '' , `` M '' ] ]"
    }
]